# Generated by Django 3.2.5 on 2021-08-30 10:49

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='菜单名称')),
                ('icon', models.CharField(max_length=32, verbose_name='菜单图标')),
            ],
            options={
                'verbose_name': '菜单',
                'db_table': 'menu',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='标题')),
                ('url', models.CharField(max_length=128, verbose_name='url')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='URL别名')),
                ('menu', models.ForeignKey(blank=True, help_text='null表示不是菜单,这个字段有值才表示二级菜单', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='app_rbac.menu', verbose_name='所属菜单')),
                ('pid', models.ForeignKey(blank=True, help_text='对于非菜单权限需要选择一个可以成为菜单的权限,用户做默认展开和选中的菜单', null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='parents', to='app_rbac.permission', verbose_name='关联某个权限')),
            ],
            options={
                'verbose_name': '权限',
                'db_table': 'permission',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='角色名称')),
                ('permission', models.ManyToManyField(blank=True, to='app_rbac.Permission', verbose_name='拥有的权限')),
            ],
            options={
                'verbose_name': '角色',
                'db_table': 'role',
            },
        ),
    ]
